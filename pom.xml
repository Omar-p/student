<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.0.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>student</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>student</name>
	<description>student</description>
	<properties>
		<java.version>17</java.version>
		<app.image.name>students-spring-react</app.image.name>
		<app.image.tag>v1</app.image.tag>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.javafaker</groupId>
			<artifactId>javafaker</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<from>
						<image>openjdk:17-alpine</image>
					</from>
					<container>
						<ports>
							<port>8080</port>
						</ports>
						<format>OCI</format>
					</container>
					<to>
						<image>omar077/${app.image.name}:v1</image>
					</to>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
		<id>jib-push-to-docker-registry</id>
		<activation>
			<activeByDefault>false</activeByDefault>
		</activation>
		<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>3.3.1</version>
						<configuration>
							<from>
								<image>openjdk:17-alpine</image>
							</from>
							<container>
								<ports>
									<port>8080</port>
								</ports>
								<format>OCI</format>
							</container>
							<to>
								<image>omar077/${app.image.name}:${app.image.tag}</image>
							</to>
						</configuration>
						<executions>
							<execution>
								<id>push-custom-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>omar077/${app.image.name}:${app.image.tag}</image>
									</to>
								</configuration>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-latest-tag</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>omar077/${app.image.name}:latest</image>
									</to>
								</configuration>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>push-custom-tag-to-local-registry</id>
								<phase>package</phase>
								<configuration>
									<to>
										<image>omar077/${app.image.name}:${app.image.tag}</image>
									</to>
								</configuration>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
							</execution>
							<execution>
								<phase>package</phase>
								<id>push-latest-tag-to-local-registry</id>
								<configuration>
									<to>
										<image>omar077/${app.image.name}:latest</image>
									</to>
								</configuration>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
		</build>
		</profile>
		<profile>
			<id>build-frontend</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<version>1.12.1</version>
						<configuration>
							<nodeVersion>v4.6.0</nodeVersion>
							<workingDirectory>src/frontend</workingDirectory>
						</configuration>
						<executions>
							<execution>
								<id>install node and npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<configuration>
									<nodeVersion>v18.12.1</nodeVersion>
									<npmVersion>9.1.2</npmVersion>
								</configuration>
							</execution>
							<execution>
								<id>npm run build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-frontend-build</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.outputDirectory}/static/</outputDirectory>
									<resources>
										<resource>
											<directory>src/frontend/build/</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
